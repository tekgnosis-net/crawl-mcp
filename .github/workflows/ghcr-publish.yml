name: Build and publish Docker image to GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run lint (flake8 if available)
        run: |
          if command -v flake8 >/dev/null 2>&1; then
            flake8 || true
          else
            echo "flake8 not found, skipping lint"
          fi

      - name: Run tests (pytest if available)
        run: |
          if command -v pytest >/dev/null 2>&1; then
            pytest -q || (echo "Tests failed" && exit 1)
          else
            echo "pytest not found, skipping tests"
          fi

  build-and-push:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=ref,ref=branch,format=short
            type=semver,pattern=v*.*.*

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Output image
        run: |
          echo "Published: ${{ steps.meta.outputs.tags }}"
