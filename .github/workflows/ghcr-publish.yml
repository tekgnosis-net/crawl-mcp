name: Build and publish Docker image to GHCR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies and dev tooling
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8 pytest

      - name: Run lint (flake8)
        run: |
          echo "Running flake8..."
          flake8

      - name: Run tests (pytest)
        run: |
          echo "Running pytest..."
          pytest -q

  build-and-push:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT || secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
          tags: |
            type=sha,format=long
            type=ref,ref=branch,format=short
            type=semver,pattern=v*.*.*

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:buildcache,mode=max
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

      - name: Output image
        run: |
          echo "Published: ${{ steps.meta.outputs.tags }}"

name: Build and publish Docker image to GHCR
name: Build and publish Docker image to GHCR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies and dev tooling
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8 pytest

      - name: Run lint (flake8)
        run: |
          echo "Running flake8..."
          flake8

      - name: Run tests (pytest)
        run: |
          echo "Running pytest..."
          pytest -q

  build-and-push:
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        name: Build and publish Docker image to GHCR

        on:
          push:
            branches: [ main ]
          pull_request:
            branches: [ main ]
          workflow_dispatch: {}

        permissions:
          contents: read
          packages: write
          id-token: write

        jobs:
          ci:
            runs-on: ubuntu-latest
            steps:
              - name: Checkout
                uses: actions/checkout@v4

              - name: Set up Python 3.12
                uses: actions/setup-python@v4
                with:
                  python-version: '3.12'

              - name: Install dependencies and dev tooling
                run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                  pip install flake8 pytest

              - name: Run lint (flake8)
                run: |
                  echo "Running flake8..."
                  flake8

              - name: Run tests (pytest)
                run: |
                  echo "Running pytest..."
                  pytest -q

          build-and-push:
            needs: ci
            runs-on: ubuntu-latest
            if: github.ref == 'refs/heads/main' && github.event_name == 'push'
            steps:
              - name: Checkout
                uses: actions/checkout@v4

              - name: Set up QEMU
                uses: docker/setup-qemu-action@v2

              - name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2

              - name: Log in to GitHub Container Registry
                uses: docker/login-action@v2
                with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GHCR_PAT || secrets.GITHUB_TOKEN }}

              - name: Extract metadata (tags)
                id: meta
                uses: docker/metadata-action@v4
                with:
                  images: |
                    ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
                  tags: |
                    type=sha,format=long
                    type=ref,ref=branch,format=short
                    type=semver,pattern=v*.*.*

              - name: Build and push
                uses: docker/build-push-action@v5
                with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  platforms: linux/amd64,linux/arm64
                  tags: ${{ steps.meta.outputs.tags }}
                  cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:buildcache
                  cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:buildcache,mode=max
                  labels: |
                    org.opencontainers.image.revision=${{ github.sha }}
                    org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}

              - name: Output image
                run: |
                  echo "Published: ${{ steps.meta.outputs.tags }}"
